#!/usr/bin/python3
class Square:
    def __init__(self, size=0, position=(0, 0)):
        self.size = size
        self.position = position

    @property
    def  size(self):
        return self.__size

    @size.setter
    def size(self, value):
        self.__size = value

        if not isinstance(value, int):
            raise TypeError("size must be an integer")
        elif value < 0:
            raise ValueError("size must be >= 0")
    @property
    def position(self):
        return self.__position

    @position.setter
    def position(self, value):
        self.__position = value

        if not isinstance(value, (uint64, uint64)):
            raise TypeError("position must be a tuple of 2 positive integers")

    def area(self):
        return (self.__size * self.__size)

    def position(self):
        if self.__size == 0:
            print()
        else:
            while (i < self.__size):
                for i in range(self.__size):
                    print("#", end="")
                    print()
                i += 1
